// Mocks generated by Mockito 5.1.0 from annotations
// in core/test/presentation/pages/popular_movies_page_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i7;
import 'dart:ui' as _i8;

import 'package:core/domain/entities/movies/movie.dart' as _i6;
import 'package:core/domain/entities/tv_show/tv_show.dart' as _i10;
import 'package:core/domain/usecases/movie/get_popular_movies.dart' as _i2;
import 'package:core/domain/usecases/tv_show/get_popular_tv_shows.dart' as _i3;
import 'package:core/presentation/provider/movie/popular_movies_notifier.dart'
    as _i4;
import 'package:core/presentation/provider/tv_show/popular_tv_shows_notifier.dart'
    as _i9;
import 'package:core/utils/state_enum.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeGetPopularMovies_0 extends _i1.Fake implements _i2.GetPopularMovies {
}

class _FakeGetPopularTvShows_1 extends _i1.Fake
    implements _i3.GetPopularTvShows {}

/// A class which mocks [PopularMoviesNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockPopularMoviesNotifier extends _i1.Mock
    implements _i4.PopularMoviesNotifier {
  MockPopularMoviesNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetPopularMovies get getPopularMovies =>
      (super.noSuchMethod(Invocation.getter(#getPopularMovies),
          returnValue: _FakeGetPopularMovies_0()) as _i2.GetPopularMovies);
  @override
  _i5.RequestState get state => (super.noSuchMethod(Invocation.getter(#state),
      returnValue: _i5.RequestState.Empty) as _i5.RequestState);
  @override
  List<_i6.Movie> get movies => (super.noSuchMethod(Invocation.getter(#movies),
      returnValue: <_i6.Movie>[]) as List<_i6.Movie>);
  @override
  String get message =>
      (super.noSuchMethod(Invocation.getter(#message), returnValue: '')
          as String);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i7.Future<void> fetchPopularMovies() =>
      (super.noSuchMethod(Invocation.method(#fetchPopularMovies, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  void addListener(_i8.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i8.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
}

/// A class which mocks [PopularTvShowsNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockPopularTvShowsNotifier extends _i1.Mock
    implements _i9.PopularTvShowsNotifier {
  MockPopularTvShowsNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.GetPopularTvShows get getPopularTvShows =>
      (super.noSuchMethod(Invocation.getter(#getPopularTvShows),
          returnValue: _FakeGetPopularTvShows_1()) as _i3.GetPopularTvShows);
  @override
  _i5.RequestState get state => (super.noSuchMethod(Invocation.getter(#state),
      returnValue: _i5.RequestState.Empty) as _i5.RequestState);
  @override
  List<_i10.TvShow> get tvShows =>
      (super.noSuchMethod(Invocation.getter(#tvShows),
          returnValue: <_i10.TvShow>[]) as List<_i10.TvShow>);
  @override
  String get message =>
      (super.noSuchMethod(Invocation.getter(#message), returnValue: '')
          as String);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i7.Future<void> fetchPopularTvShows() =>
      (super.noSuchMethod(Invocation.method(#fetchPopularTvShows, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  void addListener(_i8.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i8.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
}

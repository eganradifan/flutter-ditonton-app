// Mocks generated by Mockito 5.1.0 from annotations
// in core/test/presentation/pages/tv_show_detail_page_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i11;
import 'dart:ui' as _i12;

import 'package:core/domain/entities/tv_show/tv_show.dart' as _i10;
import 'package:core/domain/entities/tv_show/tv_show_detail.dart' as _i7;
import 'package:core/domain/usecases/tv_show/get_tv_show_detail.dart' as _i2;
import 'package:core/domain/usecases/tv_show/get_tv_show_recommendations.dart'
    as _i3;
import 'package:core/domain/usecases/tv_show/get_tv_show_watchlist_status.dart'
    as _i5;
import 'package:core/domain/usecases/tv_show/tv_show_remove_watchlist.dart'
    as _i6;
import 'package:core/domain/usecases/tv_show/tv_show_save_watchlist.dart'
    as _i4;
import 'package:core/presentation/provider/tv_show/tv_show_detail_notifier.dart'
    as _i8;
import 'package:core/utils/state_enum.dart' as _i9;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeGetTvShowDetail_0 extends _i1.Fake implements _i2.GetTvShowDetail {}

class _FakeGetTvShowsRecommendations_1 extends _i1.Fake
    implements _i3.GetTvShowsRecommendations {}

class _FakeTvShowSaveWatchlist_2 extends _i1.Fake
    implements _i4.TvShowSaveWatchlist {}

class _FakeGetTvShowWatchListStatus_3 extends _i1.Fake
    implements _i5.GetTvShowWatchListStatus {}

class _FakeTvShowRemoveWatchlist_4 extends _i1.Fake
    implements _i6.TvShowRemoveWatchlist {}

class _FakeTvShowDetail_5 extends _i1.Fake implements _i7.TvShowDetail {}

/// A class which mocks [TvShowDetailNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvShowDetailNotifier extends _i1.Mock
    implements _i8.TvShowDetailNotifier {
  MockTvShowDetailNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetTvShowDetail get getTvShowDetail =>
      (super.noSuchMethod(Invocation.getter(#getTvShowDetail),
          returnValue: _FakeGetTvShowDetail_0()) as _i2.GetTvShowDetail);
  @override
  _i3.GetTvShowsRecommendations get getTvShowsRecommendations =>
      (super.noSuchMethod(Invocation.getter(#getTvShowsRecommendations),
              returnValue: _FakeGetTvShowsRecommendations_1())
          as _i3.GetTvShowsRecommendations);
  @override
  _i4.TvShowSaveWatchlist get saveWatchlist => (super.noSuchMethod(
      Invocation.getter(#saveWatchlist),
      returnValue: _FakeTvShowSaveWatchlist_2()) as _i4.TvShowSaveWatchlist);
  @override
  _i5.GetTvShowWatchListStatus get getWatchListStatus =>
      (super.noSuchMethod(Invocation.getter(#getWatchListStatus),
              returnValue: _FakeGetTvShowWatchListStatus_3())
          as _i5.GetTvShowWatchListStatus);
  @override
  _i6.TvShowRemoveWatchlist get removeWatchlist =>
      (super.noSuchMethod(Invocation.getter(#removeWatchlist),
              returnValue: _FakeTvShowRemoveWatchlist_4())
          as _i6.TvShowRemoveWatchlist);
  @override
  _i9.RequestState get state => (super.noSuchMethod(Invocation.getter(#state),
      returnValue: _i9.RequestState.Empty) as _i9.RequestState);
  @override
  _i9.RequestState get recommendationState =>
      (super.noSuchMethod(Invocation.getter(#recommendationState),
          returnValue: _i9.RequestState.Empty) as _i9.RequestState);
  @override
  _i7.TvShowDetail get tvShows =>
      (super.noSuchMethod(Invocation.getter(#tvShows),
          returnValue: _FakeTvShowDetail_5()) as _i7.TvShowDetail);
  @override
  List<_i10.TvShow> get tvShowsRecommendation =>
      (super.noSuchMethod(Invocation.getter(#tvShowsRecommendation),
          returnValue: <_i10.TvShow>[]) as List<_i10.TvShow>);
  @override
  String get message =>
      (super.noSuchMethod(Invocation.getter(#message), returnValue: '')
          as String);
  @override
  bool get isAddedToWatchlist =>
      (super.noSuchMethod(Invocation.getter(#isAddedToWatchlist),
          returnValue: false) as bool);
  @override
  String get watchlistMessage =>
      (super.noSuchMethod(Invocation.getter(#watchlistMessage), returnValue: '')
          as String);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i11.Future<void> fetchTvShowDetail(int? id) => (super.noSuchMethod(
      Invocation.method(#fetchTvShowDetail, [id]),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i11.Future<void>);
  @override
  _i11.Future<void> addWatchlist(_i7.TvShowDetail? tvShow) =>
      (super.noSuchMethod(Invocation.method(#addWatchlist, [tvShow]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i11.Future<void>);
  @override
  _i11.Future<void> removeFromWatchlist(_i7.TvShowDetail? tvShow) =>
      (super.noSuchMethod(Invocation.method(#removeFromWatchlist, [tvShow]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i11.Future<void>);
  @override
  _i11.Future<void> loadWatchlistStatus(int? id) => (super.noSuchMethod(
      Invocation.method(#loadWatchlistStatus, [id]),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i11.Future<void>);
  @override
  void addListener(_i12.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i12.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
}
